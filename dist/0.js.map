{"version":3,"sources":["webpack:///0.js","webpack:///./src/app2/app2.js","webpack:///./node_modules/zone.js/dist/zone.js","webpack:///./node_modules/single-spa-angular2/lib/single-spa-angular2.js","webpack:///./src/app2/main-module.ts","webpack:///./src/app2/app2.component.ts","webpack:///./src/app2/subroute1.component.ts","webpack:///./src/app2/subroute2.component.ts"],"names":["webpackJsonp","257","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","bootstrap","props","ngLifecycles","mount","then","val","unmount","domElementGetter","el","document","getElementById","createElement","id","body","appendChild","Object","defineProperty","value","_singleSpaAngular","_singleSpaAngular2","_platformBrowserDynamic","_mainModule","_mainModule2","_router","mainModule","angularPlatform","platformBrowserDynamic","template","Router","260","global","factory","this","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","bindArguments","args","i","length","patchPrototype","prototype","fnNames","constructor","name_1","delegate","isPropertyWritable","ObjectGetOwnPropertyDescriptor","patched","apply","arguments","attachOriginToPatched","propertyDesc","writable","get","set","patchProperty","prop","desc","enumerable","configurable","originalDescGet","originalDescSet","eventName","substr","eventNameSymbol","zoneSymbolEventNames","zoneSymbol","newValue","target","_global","removeEventListener","wrapFn","NULL_ON_PROP_VALUE","addEventListener","listener","call","REMOVE_ATTRIBUTE","removeAttribute","ObjectDefineProperty","patchOnProperties","properties","onProperties","push","j","patchClass","className","OriginalClass","a","originalInstanceKey","Error","instance","fn","hasOwnProperty","patchMethod","name","patchFn","proto","ObjectGetPrototypeOf","delegateName","patchDelegate_1","patchMacroTask","funcName","metaCreator","scheduleTask","task","cbIdx","invoke","setNative","self","meta","original","isIEOrEdge","isDetectedIEOrEdge","ieOrEdge","ua","internalWindow","navigator","userAgent","indexOf","error","patchEventTarget","apis","patchOptions","ADD_EVENT_LISTENER","add","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER","rm","REMOVE_EVENT_LISTENER_STR","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","event","isRemoved","handleEvent","originalDelegate","options","once","delegate_1","type","globalZoneAwareCallback","tasks","zoneSymbolEventNames$1","FALSE_STR","copyTasks","slice","IMMEDIATE_PROPAGATION_SYMBOL","globalZoneAwareCaptureCallback","TRUE_STR","results","useGlobalCallback","undefined","useG","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","prepend","customScheduleGlobal","isExisting","capture","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","splice","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","blackListedEvents","__symbol__","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","isHandleEvent","zone","falseEventName","trueEventName","symbol","ZONE_SYMBOL_PREFIX","symbolCapture","constructorName","targetSource","globalSources","OPTIMIZED_ZONE_EVENT_TASK_DATA","scheduleEventTask","unshift","cancelTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","EVENT_NAME_SYMBOL_REGX","exec","evtName","foundTasks","patchEventPrototype","api","Event","patchTimer","window","setName","cancelName","nameSuffix","timer","isPeriodic","handleId","tasksByHandleId","taskSymbol","clearTask","clearNative","delay","handle","ref","unref","bind","state","cancelFn","runCount","propertyPatch","isUnconfigurable","TypeError","originalConfigurableFlag","rewriteDescriptor","_tryDefineProperty","defineProperties","forEach","create","isFrozen","_create","getOwnPropertyDescriptor","_getOwnPropertyDescriptor","_redefineProperty","unconfigurablesKey","_defineProperty","descJson","JSON","stringify","toString","console","log","WS","WebSocket","EventTarget","x","y","proxySocket","proxySocketProto","socket","onmessageDesc","ObjectCreate","propName","ArraySlice","propertySymbol","globalWebSocket","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","isNode","isMix","supportsWebSocket","canPatchViaPropertyDescriptor","__Zone_ignore_on_properties","isBrowser","eventNames","concat","Document","Element","HTMLElement","HTMLMediaElement","mediaElementEventNames","HTMLFrameSetElement","windowEventNames","frameSetEventNames","HTMLBodyElement","HTMLFrameElement","frameEventNames","HTMLIFrameElement","HTMLMarqueeElement_1","marqueeEventNames","Worker_1","workerEventNames","XMLHttpRequest","XMLHttpRequestEventNames","XMLHttpRequestEventTarget","IDBIndex","IDBIndexEventNames","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","websocketEventNames","patchViaCapturingAllTheEvents","XMLHttpRequestPrototype","xhrDesc","req","result","onreadystatechange","SYMBOL_FAKE_ONREADYSTATECHANGE_1","detectFunc","property","onproperty","bound","elt","unboundKey","parentElement","eventTargetPatch","WTF_ISSUE_555","NO_EVENT_TARGET","split","isWtf","WTF_ISSUE_555_ARRAY","map","v","isDisableIECheck","isEnableCrossContextCheck","BROWSER_TOOLS","targets","checkIEAndCrossContext","nativeDelegate","testString","apiTypes","patchEvent","registerElementPatch","_registerElement","registerElement","callbacks","opts","descriptor","mark","performance","performanceMeasure","label","scheduleMicroTask","_numberOfNestedTaskFrames","_microTaskQueue","nativeMicroTaskQueuePromise","symbolPromise","resolve","symbolThen","drainMicroTaskQueue","symbolSetTimeout","_isDrainingMicrotaskQueue","queue","runTask","_api","onUnhandledError","microtaskDrainDone","noop","parent","zoneSpec","_properties","_parent","_name","_zoneDelegate","ZoneDelegate","assertZonePatched","patches","_currentZoneFrame","_currentTask","__load_patch","perfName","key","getZoneWith","fork","_callback","intercept","runGuarded","run","applyThis","applyArgs","handleError","NO_ZONE","notScheduled","eventTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","macroTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","ZoneTask","microTask","canceling","count","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","next","change","_state","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","currentZoneFrame","showUncaughtError","setNativePromise","NativePromise","readableObjectToString","handleUnhandledRejection","e","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","forwardResolution","forwardRejection","rejection","ZoneAwarePromise","reject","makeResolver","promise","resolvePromise","onceWrapper","TYPE_ERROR","symbolState","UNRESOLVED","REJECTED","symbolValue","clearRejectedNoCatch","trace","currentTask","creationTrace","CURRENT_TASK_TRACE_SYMBOL","scheduleResolveOrReject","REJECTED_NO_CATCH","stack","error_1","_uncaughtPromiseErrors","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","patchThen","Ctor","originalThen","onResolve","onReject","_this","symbolThenPatched","message","uncaughtPromiseError","shift","RESOLVED","wasCalled","wrappedFunction","executor","race","values","res","rej","_i","values_1","all","resolvedValues","values_2","index","catch","ZONE_AWARE_PROMISE","NewNativePromise","fetch_1","resultPromise","ctor","Promise","getPrototypeOf","Array","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","isWindowExists","isWebWorker","WorkerGlobalScope","process","preventDefault","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","nativePromise","nativeError","originalObjectToString","globalEventHandlersEventNames","documentEventNames","htmlElementEventNames","ieElementEventNames","webglEventNames","formEventNames","detailEventNames","blockingMethods","s","SYMBOL_BLACK_LISTED_EVENTS","HTMLCanvasElement","toBlob","findPendingTask","XHR_TASK","XHR_SCHEDULED","XHR_LISTENER","oriAddListener","oriRemoveListener","READY_STATE_CHANGE","newListener","readyState","DONE","aborted","SCHEDULED","sendNative","placeholderCallback","abortNative","XMLHttpRequestEventTargetPrototype","openNative","XHR_SYNC","XHR_URL","url","geolocation","findPromiseRejectionHandler","PromiseRejectionEvent","evt","reason","261","singleSpaAngular2","userOpts","_typeof","_extends","defaultOpts","getContainerEl","innerHTML","bootstrapModule","bootstrappedModule","injector","dispose","destroy","element","assign","Symbol","iterator","262","__decorate","decorators","d","c","r","Reflect","decorate","core_1","platform_browser_1","app2_component_ts_1","subroute1_component_ts_1","subroute2_component_ts_1","core_2","router_1","common_1","appRoutes","path","component","Subroute1","Subroute2","enableProdMode","MainModule","NgModule","imports","BrowserModule","RouterModule","forRoot","providers","provide","APP_BASE_HREF","useValue","declarations","App2","263","Component","selector","264","265"],"mappings":"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B,EAAA4hB,EACA,IAAAE,EACA,MAAAL,GAAA9f,MAAAmgB,EAAAlgB,WAGA,GAAA1B,OAAAkE,MAAA,CACA,GAAA2d,GAAA/hB,EAAA6hB,EACA,IAAAE,EACA,MAAAN,GAAA9f,MAAAogB,EAAAngB,YAIA,MAAA6f,GAAA9f,MAAAzB,KAAA0B,WAGA,IAAAogB,GAAA/iB,OAAAkC,UAAA8N,QAEAhQ,QAAAkC,UAAA8N,SAAA,WACA,MAAA/O,gBAAA6gB,SAFA,mBAKAiB,EAAArgB,MAAAzB,KAAA0B;;;;;;;AAgBA,GAAA6J,KACAhD,MAAA,GAEAV,MACAyD,MACAW,GAAA,qCACAhE,GAAA,oCAwgBAgF,GAAAtK,EAAA,YA+HAgM,GAAA5P,OAAA4D,EAAA,mBAAA5D,OAAAC,eACAwP,GAAAzP,OAAA4D,EAAA,6BACA5D,OAAAwP,yBACAD,GAAAvP,OAAAqP,OACAM,GAAA/L,EAAA,mBA6JAof,IACA,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAEAC,IACA,iFACA,sFACA,oFACA,oBAEAzQ,IACA,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,S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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 257:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bootstrap = bootstrap;\nexports.mount = mount;\nexports.unmount = unmount;\n\n__webpack_require__(260);\n\n__webpack_require__(114);\n\nvar _singleSpaAngular = __webpack_require__(261);\n\nvar _singleSpaAngular2 = _interopRequireDefault(_singleSpaAngular);\n\nvar _platformBrowserDynamic = __webpack_require__(115);\n\nvar _mainModule = __webpack_require__(262);\n\nvar _mainModule2 = _interopRequireDefault(_mainModule);\n\nvar _router = __webpack_require__(112);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ngLifecycles = (0, _singleSpaAngular2.default)({\n  domElementGetter: domElementGetter,\n  mainModule: _mainModule2.default,\n  angularPlatform: (0, _platformBrowserDynamic.platformBrowserDynamic)(),\n  template: '<app2 />',\n  Router: _router.Router\n});\n\nfunction bootstrap(props) {\n  return ngLifecycles.bootstrap(props);\n}\n\nfunction mount(props) {\n  return ngLifecycles.mount(props).then(function (val) {});\n}\n\nfunction unmount(props) {\n  return ngLifecycles.unmount(props);\n}\n\nfunction domElementGetter() {\n  // Make sure there is a div for us to render into\n  var el = document.getElementById('app2');\n  if (!el) {\n    el = document.createElement('div');\n    el.id = 'app2';\n    document.body.appendChild(el);\n  }\n\n  return el;\n}\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\t true ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Zone$1 = (function (global) {\n    var FUNCTION = 'function';\n    var performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    if (global['Zone']) {\n        throw new Error('Zone already loaded.');\n    }\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"root\", {\n            get: function () {\n                var zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.__load_patch = function (name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                throw Error('Already loaded patch: ' + name);\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                var perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        };\n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== FUNCTION) {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = undefined; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            // we have to define an variable here, if not\n            // typescript compiler will complain below\n            var isNotScheduled = task.state === notScheduled;\n            if (isNotScheduled && task.type === eventTask) {\n                return;\n            }\n            var reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleTask = function (task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                var newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(\"can not reschedule task to \" + this\n                            .name + \" which is descendants of the original zone \" + task.zone.name);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            var zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        };\n        Zone.prototype._updateTaskCount = function (task, count) {\n            var zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (var i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        };\n        return Zone;\n    }());\n    Zone.__symbol__ = __symbol__;\n    var DELEGATE_ZS = {\n        name: '',\n        onHasTask: function (delegate, _, target, hasTaskState) {\n            return delegate.hasTask(target, hasTaskState);\n        },\n        onScheduleTask: function (delegate, _, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) { return delegate.invokeTask(target, task, applyThis, applyArgs); },\n        onCancelTask: function (delegate, _, target, task) {\n            return delegate.cancelTask(target, task);\n        }\n    };\n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            var returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ?\n                this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                return this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        ZoneTask.invokeTask = function (task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        };\n        Object.defineProperty(ZoneTask.prototype, \"zone\", {\n            get: function () {\n                return this._zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ZoneTask.prototype, \"state\", {\n            get: function () {\n                return this._state;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ZoneTask.prototype.cancelScheduleRequest = function () {\n            this._transitionTo(notScheduled, scheduling);\n        };\n        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(this.type + \" '\" + this.source + \"': can not transition to '\" + toState + \"', expecting state '\" + fromState1 + \"'\" + (fromState2 ?\n                    ' or \\'' + fromState2 + '\\'' :\n                    '') + \", was '\" + this._state + \"'.\");\n            }\n        };\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        };\n        return ZoneTask;\n    }());\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                nativeMicroTaskQueuePromise[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var NO_ZONE = { name: 'NO ZONE' };\n    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    var patches = {};\n    var _api = {\n        symbol: __symbol__,\n        currentZoneFrame: function () { return _currentZoneFrame; },\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: function () { return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')]; },\n        patchEventTarget: function () { return []; },\n        patchOnProperties: noop,\n        patchMethod: function () { return noop; },\n        bindArguments: function () { return null; },\n        setNativePromise: function (NativePromise) {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === FUNCTION) {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n    };\n    var _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    var _currentTask = null;\n    var _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {\n    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            var className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    var __symbol__ = api.symbol;\n    var _uncaughtPromiseErrors = [];\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var creationTrace = '__creationTrace__';\n    api.onUnhandledError = function (e) {\n        if (api.showUncaughtError()) {\n            var rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = function () {\n        while (_uncaughtPromiseErrors.length) {\n            var _loop_1 = function () {\n                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(function () {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            };\n            while (_uncaughtPromiseErrors.length) {\n                _loop_1();\n            }\n        }\n    };\n    var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    var once = function () {\n        var wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    var TYPE_ERROR = 'Promise resolved with itself';\n    var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        var onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            var then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(function () {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(function () {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    var trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        var error_1 = err;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                var handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, undefined, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[symbolPromise] = global['Promise'];\n    var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    var symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        var proto = Ctor.prototype;\n        var originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        // check Ctor.prototype.then propertyDescriptor is writable or not\n        // in meteor env, writable is false, we have to make it to be true.\n        var prop = ObjectGetOwnPropertyDescriptor(Ctor.prototype, 'then');\n        if (prop && prop.writable === false && prop.configurable) {\n            ObjectDefineProperty(Ctor.prototype, 'then', { writable: true });\n        }\n        Ctor.prototype.then = function (onResolve, onReject) {\n            var _this = this;\n            var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                originalThen.call(_this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    function zoneify(fn) {\n        return function () {\n            var resultPromise = fn.apply(this, arguments);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            var ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        var fetch_1 = global['fetch'];\n        if (typeof fetch_1 == 'function') {\n            global['fetch'] = zoneify(fetch_1);\n        }\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */ var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nvar ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nvar ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nvar ObjectCreate = Object.create;\n/** Array.prototype.slice */\nvar ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nvar ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nvar REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nvar ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nvar ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nvar TRUE_STR = 'true';\n/** false string const */\nvar FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nvar ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nvar zoneSymbol = Zone.__symbol__;\nvar isWindowExists = typeof window !== 'undefined';\nvar internalWindow = isWindowExists ? window : undefined;\nvar _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nvar REMOVE_ATTRIBUTE = 'removeAttribute';\nvar NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    var source = prototype.constructor['name'];\n    var _loop_1 = function (i) {\n        var name_1 = fnNames[i];\n        var delegate = prototype[name_1];\n        if (delegate) {\n            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);\n            if (!isPropertyWritable(prototypeDesc)) {\n                return \"continue\";\n            }\n            prototype[name_1] = (function (delegate) {\n                var patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    };\n    for (var i = 0; i < fnNames.length; i++) {\n        _loop_1(i);\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nvar isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nvar zoneSymbolEventNames = {};\nvar wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    var eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    var target = this || event.target || _global;\n    var listener = target[eventNameSymbol];\n    var result = listener && listener.apply(this, arguments);\n    if (result != undefined && !result) {\n        event.preventDefault();\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    var desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    var originalDescGet = desc.get;\n    var originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        var previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        var listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            var value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        var onProperties = [];\n        for (var prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (var j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    var OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        var a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    var instance = new OriginalClass(function () { });\n    var prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            var patchDelegate_1 = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate_1(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask, null);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nvar isDetectedIEOrEdge = false;\nvar ieOrEdge = false;\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n        return ieOrEdge;\n    }\n    catch (error) {\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', function (global, Zone) {\n    // patch Func.prototype.toString to let them look like native\n    var originalFunctionToString = Zone['__zone_symbol__originalToString'] =\n        Function.prototype.toString;\n    var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    var PROMISE_SYMBOL = zoneSymbol('Promise');\n    var ERROR_SYMBOL = zoneSymbol('Error');\n    Function.prototype.toString = function () {\n        if (typeof this === 'function') {\n            var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.apply(this[ORIGINAL_DELEGATE_SYMBOL], arguments);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                var nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.apply(nativePromise, arguments);\n                }\n            }\n            if (this === Error) {\n                var nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.apply(nativeError, arguments);\n                }\n            }\n        }\n        return originalFunctionToString.apply(this, arguments);\n    };\n    // patch Object.prototype.toString to let them look like native\n    var originalObjectToString = Object.prototype.toString;\n    var PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.apply(this, arguments);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// an identifier to tell ZoneTask do not create a new invoke closure\nvar OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nvar zoneSymbolEventNames$1 = {};\nvar globalSources = {};\nvar EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nvar IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    var PREPEND_EVENT_LISTENER = 'prependListener';\n    var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    var invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        var delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = function (event) { return delegate.handleEvent(event); };\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        var options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    var globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    var globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        var useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        var validateHandler = patchOptions && patchOptions.vh;\n        var checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        var returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        var proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        var taskData = {};\n        var nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        var nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        var nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        var nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        var nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        var customScheduleGlobal = function () {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        var customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                var symbolEventName = void 0;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (var i = 0; i < existingTasks.length; i++) {\n                        var existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        var customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        var compareTaskCallbackVsDelegate = function (task, delegate) {\n            var typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        var compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {\n            if (returnTarget === void 0) { returnTarget = false; }\n            if (prepend === void 0) { prepend = false; }\n            return function () {\n                var target = this || _global;\n                var delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                var isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                var eventName = arguments[0];\n                var options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (var i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                var capture;\n                var once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                var zone = Zone.current;\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                var symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    var falseEventName = eventName + FALSE_STR;\n                    var trueEventName = eventName + TRUE_STR;\n                    var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = target[symbolEventName];\n                var isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (var i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                var source;\n                var constructorName = target.constructor['name'];\n                var targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource + eventName;\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : null;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                task.options = options;\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var options = arguments[2];\n            var capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            var delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            var symbolEventNames = zoneSymbolEventNames$1[eventName];\n            var symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            var existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (var i = 0; i < existingTasks.length; i++) {\n                    var existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var listeners = [];\n            var tasks = findEventTasks(target, eventName);\n            for (var i = 0; i < tasks.length; i++) {\n                var task = tasks[i];\n                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            if (!eventName) {\n                var keys = Object.keys(target);\n                for (var i = 0; i < keys.length; i++) {\n                    var prop = keys[i];\n                    var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    var evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    var symbolEventName = symbolEventNames[FALSE_STR];\n                    var symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    var tasks = target[symbolEventName];\n                    var captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        var removeTasks = tasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        var removeTasks = captureTasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    var results = [];\n    for (var i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    var foundTasks = [];\n    for (var prop in target) {\n        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        var evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            var tasks = target[prop];\n            if (tasks) {\n                for (var i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    var Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        }; });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var id = args[0];\n            var task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nvar _create = Object.create;\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        var originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        var desc = _getOwnPropertyDescriptor(obj, prop);\n        if (isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    var originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                var descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + error);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// we have to patch the instance since the proto is non-configurable\nfunction apply(api, _global) {\n    var WS = _global.WebSocket;\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n    // On older Chrome, no need since EventTarget was already patched\n    if (!_global.EventTarget) {\n        patchEventTarget(_global, [WS.prototype]);\n    }\n    _global.WebSocket = function (x, y) {\n        var socket = arguments.length > 1 ? new WS(x, y) : new WS(x);\n        var proxySocket;\n        var proxySocketProto;\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n        var onmessageDesc = ObjectGetOwnPropertyDescriptor(socket, 'onmessage');\n        if (onmessageDesc && onmessageDesc.configurable === false) {\n            proxySocket = ObjectCreate(socket);\n            // socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'\n            // but proxySocket not, so we will keep socket as prototype and pass it to\n            // patchOnProperties method\n            proxySocketProto = socket;\n            [ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR, 'send', 'close'].forEach(function (propName) {\n                proxySocket[propName] = function () {\n                    var args = ArraySlice.call(arguments);\n                    if (propName === ADD_EVENT_LISTENER_STR || propName === REMOVE_EVENT_LISTENER_STR) {\n                        var eventName = args.length > 0 ? args[0] : undefined;\n                        if (eventName) {\n                            var propertySymbol = Zone.__symbol__('ON_PROPERTY' + eventName);\n                            socket[propertySymbol] = proxySocket[propertySymbol];\n                        }\n                    }\n                    return socket[propName].apply(socket, args);\n                };\n            });\n        }\n        else {\n            // we can patch the real socket\n            proxySocket = socket;\n        }\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open'], proxySocketProto);\n        return proxySocket;\n    };\n    var globalWebSocket = _global['WebSocket'];\n    for (var prop in WS) {\n        globalWebSocket[prop] = WS[prop];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nvar documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange'\n];\nvar windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nvar htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nvar mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nvar ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nvar webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nvar formEventNames = ['autocomplete', 'autocompleteerror'];\nvar detailEventNames = ['toggle'];\nvar frameEventNames = ['load'];\nvar frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nvar marqueeEventNames = ['bounce', 'finish', 'start'];\nvar XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nvar IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nvar websocketEventNames = ['close', 'error', 'open', 'message'];\nvar workerEventNames = ['error', 'message'];\nvar eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties) {\n        return onProperties;\n    }\n    var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    var targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    var filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\n    if (canPatchViaPropertyDescriptor()) {\n        var ignoreProperties = _global.__Zone_ignore_on_properties;\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            var internalWindow = window;\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            var HTMLMarqueeElement_1 = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement_1) {\n                patchFilteredProperties(HTMLMarqueeElement_1.prototype, marqueeEventNames, ignoreProperties);\n            }\n            var Worker_1 = internalWindow['Worker'];\n            if (Worker_1) {\n                patchFilteredProperties(Worker_1.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        var XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n    else {\n        // Safari, Android browsers (Jelly Bean)\n        patchViaCapturingAllTheEvents();\n        patchClass('XMLHttpRequest');\n        if (supportsWebSocket) {\n            apply(api, _global);\n        }\n    }\n}\nfunction canPatchViaPropertyDescriptor() {\n    if ((isBrowser || isMix) && !ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n        typeof Element !== 'undefined') {\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n        // IDL interface attributes are not configurable\n        var desc = ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');\n        if (desc && !desc.configurable)\n            return false;\n    }\n    var ON_READY_STATE_CHANGE = 'onreadystatechange';\n    var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n    var xhrDesc = ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE);\n    // add enumerable and configurable here because in opera\n    // by default XMLHttpRequest.prototype.onreadystatechange is undefined\n    // without adding enumerable and configurable will cause onreadystatechange\n    // non-configurable\n    // and if XMLHttpRequest.prototype.onreadystatechange is undefined,\n    // we should set a real desc instead a fake one\n    if (xhrDesc) {\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return true;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var result = !!req.onreadystatechange;\n        // restore original desc\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, xhrDesc || {});\n        return result;\n    }\n    else {\n        var SYMBOL_FAKE_ONREADYSTATECHANGE_1 = zoneSymbol('fake');\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];\n            },\n            set: function (value) {\n                this[SYMBOL_FAKE_ONREADYSTATECHANGE_1] = value;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var detectFunc = function () { };\n        req.onreadystatechange = detectFunc;\n        var result = req[SYMBOL_FAKE_ONREADYSTATECHANGE_1] === detectFunc;\n        req.onreadystatechange = null;\n        return result;\n    }\n}\nvar unboundKey = zoneSymbol('unbound');\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n    var _loop_1 = function (i) {\n        var property = eventNames[i];\n        var onproperty = 'on' + property;\n        self.addEventListener(property, function (event) {\n            var elt = event.target, bound, source;\n            if (elt) {\n                source = elt.constructor['name'] + '.' + onproperty;\n            }\n            else {\n                source = 'unknown.' + onproperty;\n            }\n            while (elt) {\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n                    bound = wrapWithCurrentZone(elt[onproperty], source);\n                    bound[unboundKey] = elt[onproperty];\n                    elt[onproperty] = bound;\n                }\n                elt = elt.parentElement;\n            }\n        }, true);\n    };\n    for (var i = 0; i < eventNames.length; i++) {\n        _loop_1(i);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n    var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'\n        .split(',');\n    var EVENT_TARGET = 'EventTarget';\n    var apis = [];\n    var isWtf = _global['wtf'];\n    var WTF_ISSUE_555_ARRAY = WTF_ISSUE_555.split(',');\n    if (isWtf) {\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\n        apis = WTF_ISSUE_555_ARRAY.map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n    }\n    else if (_global[EVENT_TARGET]) {\n        apis.push(EVENT_TARGET);\n    }\n    else {\n        // Note: EventTarget is not available in all browsers,\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n        apis = NO_EVENT_TARGET;\n    }\n    var isDisableIECheck = _global['__Zone_disable_IE_check'] || false;\n    var isEnableCrossContextCheck = _global['__Zone_enable_cross_context_check'] || false;\n    var ieOrEdge = isIEOrEdge();\n    var ADD_EVENT_LISTENER_SOURCE = '.addEventListener:';\n    var FUNCTION_WRAPPER = '[object FunctionWrapper]';\n    var BROWSER_TOOLS = 'function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (var i = 0; i < eventNames.length; i++) {\n        var eventName = eventNames[i];\n        var falseEventName = eventName + FALSE_STR;\n        var trueEventName = eventName + TRUE_STR;\n        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    //  predefine all task.source string\n    for (var i = 0; i < WTF_ISSUE_555.length; i++) {\n        var target = WTF_ISSUE_555_ARRAY[i];\n        var targets = globalSources[target] = {};\n        for (var j = 0; j < eventNames.length; j++) {\n            var eventName = eventNames[j];\n            targets[eventName] = target + ADD_EVENT_LISTENER_SOURCE + eventName;\n        }\n    }\n    var checkIEAndCrossContext = function (nativeDelegate, delegate, target, args) {\n        if (!isDisableIECheck && ieOrEdge) {\n            if (isEnableCrossContextCheck) {\n                try {\n                    var testString = delegate.toString();\n                    if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                        nativeDelegate.apply(target, args);\n                        return false;\n                    }\n                }\n                catch (error) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n            else {\n                var testString = delegate.toString();\n                if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n        }\n        else if (isEnableCrossContextCheck) {\n            try {\n                delegate.toString();\n            }\n            catch (error) {\n                nativeDelegate.apply(target, args);\n                return false;\n            }\n        }\n        return true;\n    };\n    var apiTypes = [];\n    for (var i = 0; i < apis.length; i++) {\n        var type = _global[apis[i]];\n        apiTypes.push(type && type.prototype);\n    }\n    // vh is validateHandler to check event handler\n    // is valid or not(for security check)\n    patchEventTarget(_global, apiTypes, { vh: checkIEAndCrossContext });\n    api.patchEventTarget = patchEventTarget;\n    return true;\n}\nfunction patchEvent(global, api) {\n    patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction registerElementPatch(_global) {\n    if ((!isBrowser && !isMix) || !('registerElement' in _global.document)) {\n        return;\n    }\n    var _registerElement = document.registerElement;\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n    document.registerElement = function (name, opts) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                var source = 'Document.registerElement::' + callback;\n                var prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    var descriptor = ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = wrapWithCurrentZone(descriptor.value, source);\n                        _redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else {\n                        prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return _registerElement.call(document, name, opts);\n    };\n    attachOriginToPatched(document.registerElement, _registerElement);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('util', function (global, Zone, api) {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n});\nZone.__load_patch('timers', function (global) {\n    var set = 'set';\n    var clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', function (global) {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', function (global, Zone) {\n    var blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (var i = 0; i < blockingMethods.length; i++) {\n        var name_1 = blockingMethods[i];\n        patchMethod(global, name_1, function (delegate, symbol, name) {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', function (global, Zone, api) {\n    // load blackListEvents from global\n    var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', function (global, Zone, api) {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n    registerElementPatch(global);\n});\nZone.__load_patch('canvas', function (global) {\n    var HTMLCanvasElement = global['HTMLCanvasElement'];\n    if (typeof HTMLCanvasElement !== 'undefined' && HTMLCanvasElement.prototype &&\n        HTMLCanvasElement.prototype.toBlob) {\n        patchMacroTask(HTMLCanvasElement.prototype, 'toBlob', function (self, args) {\n            return { name: 'HTMLCanvasElement.toBlob', target: self, cbIdx: 0, args: args };\n        });\n    }\n});\nZone.__load_patch('XHR', function (global, Zone) {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    var XHR_TASK = zoneSymbol('xhrTask');\n    var XHR_SYNC = zoneSymbol('xhrSync');\n    var XHR_LISTENER = zoneSymbol('xhrListener');\n    var XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    var XHR_URL = zoneSymbol('xhrURL');\n    function patchXHR(window) {\n        var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            var XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        var READY_STATE_CHANGE = 'readystatechange';\n        var SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            XMLHttpRequest[XHR_SCHEDULED] = false;\n            var data = task.data;\n            var target = data.target;\n            // remove existing event listener\n            var listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            var newListener = target[XHR_LISTENER] = function () {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && XMLHttpRequest[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        task.invoke();\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            var storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            XMLHttpRequest[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            var data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        }; });\n        var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                var options = {\n                    target: self,\n                    url: self[XHR_URL],\n                    isPeriodic: false,\n                    delay: null,\n                    args: args,\n                    aborted: false\n                };\n                return scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n            }\n        }; });\n        var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self) {\n            var task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        }; });\n    }\n});\nZone.__load_patch('geolocation', function (global) {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', function (global, Zone) {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            var eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(function (eventTask) {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                var PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    var evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = singleSpaAngular2;\nvar defaultOpts = {\n\t// required opts\n\tdomElementGetter: null,\n\tangularPlatform: null,\n\tmainModule: null,\n\ttemplate: null,\n\t// optional opts\n\tRouter: null\n};\n\nfunction singleSpaAngular2(userOpts) {\n\tif ((typeof userOpts === 'undefined' ? 'undefined' : _typeof(userOpts)) !== 'object') {\n\t\tthrow new Error('single-spa-angular2 requires a configuration object');\n\t}\n\n\tvar opts = _extends({}, defaultOpts, userOpts);\n\n\tif (typeof opts.domElementGetter !== 'function') {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.domElementGetter function');\n\t}\n\n\tif (!opts.angularPlatform) {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.angularPlatform. Usually this should be the return value of platformBrowserDynamic()');\n\t}\n\n\tif (!opts.mainModule) {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.mainModule, which is the Angular module to bootstrap');\n\t}\n\n\tif (typeof opts.template !== 'string') {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.template string');\n\t}\n\n\treturn {\n\t\tbootstrap: bootstrap.bind(null, opts),\n\t\tmount: mount.bind(null, opts),\n\t\tunmount: unmount.bind(null, opts)\n\t};\n}\n\nfunction bootstrap(opts) {\n\treturn Promise.resolve();\n}\n\nfunction mount(opts) {\n\tvar containerEl = getContainerEl(opts);\n\tcontainerEl.innerHTML = opts.template;\n\treturn opts.angularPlatform.bootstrapModule(opts.mainModule).then(function (module) {\n\t\treturn opts.bootstrappedModule = module;\n\t});\n}\n\nfunction unmount(opts) {\n\treturn new Promise(function (resolve, reject) {\n\t\tif (opts.Router) {\n\t\t\tvar routerRef = opts.bootstrappedModule.injector.get(opts.Router);\n\t\t\trouterRef.dispose();\n\t\t}\n\t\topts.bootstrappedModule.destroy();\n\t\tdelete opts.bootstrappedModule;\n\t\tresolve();\n\t});\n}\n\nfunction getContainerEl(opts) {\n\tvar element = opts.domElementGetter();\n\tif (!element) {\n\t\tthrow new Error('domElementGetter did not return a valid dom element');\n\t}\n\n\treturn element;\n}\n\n/***/ }),\n\n/***/ 262:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(15);\nvar platform_browser_1 = __webpack_require__(63);\nvar app2_component_ts_1 = __webpack_require__(263);\nvar subroute1_component_ts_1 = __webpack_require__(264);\nvar subroute2_component_ts_1 = __webpack_require__(265);\nvar core_2 = __webpack_require__(15);\nvar router_1 = __webpack_require__(112);\nvar common_1 = __webpack_require__(28);\nvar appRoutes = [\n    {\n        path: 'subroute1',\n        component: subroute1_component_ts_1.Subroute1\n    },\n    {\n        path: 'subroute2',\n        component: subroute2_component_ts_1.Subroute2\n    },\n];\ncore_2.enableProdMode();\nvar MainModule = /** @class */ (function () {\n    function MainModule() {\n    }\n    MainModule = __decorate([\n        core_1.NgModule({\n            imports: [\n                platform_browser_1.BrowserModule,\n                router_1.RouterModule.forRoot(appRoutes, {}),\n            ],\n            providers: [{ provide: common_1.APP_BASE_HREF, useValue: '/app2/' }],\n            declarations: [\n                app2_component_ts_1.App2,\n                subroute1_component_ts_1.Subroute1,\n                subroute2_component_ts_1.Subroute2,\n            ],\n            bootstrap: [app2_component_ts_1.App2]\n        })\n    ], MainModule);\n    return MainModule;\n}());\nexports.default = MainModule;\n\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(15);\nvar App2 = /** @class */ (function () {\n    function App2() {\n    }\n    App2 = __decorate([\n        core_1.Component({\n            selector: 'app2',\n            template: \"\\n    <div style=\\\"margin-top: 100px;\\\">\\n      This was rendered by App2 which is written in Angular\\n    </div>\\n    <a [routerLink]=\\\"['/subroute1']\\\" routerLinkActive=\\\"active\\\">Angular route 1</a>\\n    <a [routerLink]=\\\"['/subroute2']\\\" routerLinkActive=\\\"active\\\">Angular route 2</a>\\n\\n    <router-outlet></router-outlet>\\n  \",\n        })\n    ], App2);\n    return App2;\n}());\nexports.App2 = App2;\n\n\n/***/ }),\n\n/***/ 264:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(15);\nvar Subroute1 = /** @class */ (function () {\n    function Subroute1() {\n    }\n    Subroute1 = __decorate([\n        core_1.Component({\n            template: \"\\n    <div>\\n      Subroute 1 is working!\\n    </div>\\n  \",\n        })\n    ], Subroute1);\n    return Subroute1;\n}());\nexports.Subroute1 = Subroute1;\n\n\n/***/ }),\n\n/***/ 265:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(15);\nvar Subroute2 = /** @class */ (function () {\n    function Subroute2() {\n    }\n    Subroute2 = __decorate([\n        core_1.Component({\n            template: \"\\n    <div>\\n      Subroute 2 is working!\\n    </div>\\n  \",\n        })\n    ], Subroute2);\n    return Subroute2;\n}());\nexports.Subroute2 = Subroute2;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","import 'zone.js';\nimport 'reflect-metadata';\nimport singleSpaAngular from 'single-spa-angular2';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport mainModule from './main-module.ts';\nimport { Router } from '@angular/router';\n\nconst ngLifecycles = singleSpaAngular({\n  domElementGetter,\n  mainModule,\n  angularPlatform: platformBrowserDynamic(),\n  template: `<app2 />`,\n  Router,\n})\n\nexport function bootstrap(props) {\n  return ngLifecycles.bootstrap(props);\n}\n\nexport function mount(props) {\n  return ngLifecycles.mount(props).then(val => {});\n}\n\nexport function unmount(props) {\n  return ngLifecycles.unmount(props);\n}\n\nfunction domElementGetter() {\n  // Make sure there is a div for us to render into\n  let el = document.getElementById('app2');\n  if (!el) {\n    el = document.createElement('div');\n    el.id = 'app2';\n    document.body.appendChild(el);\n  }\n\n  return el;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app2/app2.js","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Zone$1 = (function (global) {\n    var FUNCTION = 'function';\n    var performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    if (global['Zone']) {\n        throw new Error('Zone already loaded.');\n    }\n    var Zone = (function () {\n        function Zone(parent, zoneSpec) {\n            this._properties = null;\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        Zone.assertZonePatched = function () {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        };\n        Object.defineProperty(Zone, \"root\", {\n            get: function () {\n                var zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"current\", {\n            get: function () {\n                return _currentZoneFrame.zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone, \"currentTask\", {\n            get: function () {\n                return _currentTask;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.__load_patch = function (name, fn) {\n            if (patches.hasOwnProperty(name)) {\n                throw Error('Already loaded patch: ' + name);\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                var perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        };\n        Object.defineProperty(Zone.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Zone.prototype, \"name\", {\n            get: function () {\n                return this._name;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Zone.prototype.get = function (key) {\n            var zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        };\n        Zone.prototype.getZoneWith = function (key) {\n            var current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        };\n        Zone.prototype.fork = function (zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        };\n        Zone.prototype.wrap = function (callback, source) {\n            if (typeof callback !== FUNCTION) {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            var _callback = this._zoneDelegate.intercept(this, callback, source);\n            var zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        };\n        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = undefined; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {\n            if (applyThis === void 0) { applyThis = null; }\n            if (applyArgs === void 0) { applyArgs = null; }\n            if (source === void 0) { source = null; }\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        };\n        Zone.prototype.runTask = function (task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            // we have to define an variable here, if not\n            // typescript compiler will complain below\n            var isNotScheduled = task.state === notScheduled;\n            if (isNotScheduled && task.type === eventTask) {\n                return;\n            }\n            var reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            var previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = null;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        };\n        Zone.prototype.scheduleTask = function (task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                var newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(\"can not reschedule task to \" + this\n                            .name + \" which is descendants of the original zone \" + task.zone.name);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            var zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        };\n        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, null));\n        };\n        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        };\n        Zone.prototype.cancelTask = function (task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        };\n        Zone.prototype._updateTaskCount = function (task, count) {\n            var zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (var i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        };\n        return Zone;\n    }());\n    Zone.__symbol__ = __symbol__;\n    var DELEGATE_ZS = {\n        name: '',\n        onHasTask: function (delegate, _, target, hasTaskState) {\n            return delegate.hasTask(target, hasTaskState);\n        },\n        onScheduleTask: function (delegate, _, target, task) {\n            return delegate.scheduleTask(target, task);\n        },\n        onInvokeTask: function (delegate, _, target, task, applyThis, applyArgs) { return delegate.invokeTask(target, task, applyThis, applyArgs); },\n        onCancelTask: function (delegate, _, target, task) {\n            return delegate.cancelTask(target, task);\n        }\n    };\n    var ZoneDelegate = (function () {\n        function ZoneDelegate(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate.zone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate.zone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate.zone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate.zone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate.zone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate.zone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate.zone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            var zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            var parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        };\n        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        };\n        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ?\n                this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.handleError = function (targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        };\n        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {\n            var returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        };\n        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ?\n                this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        };\n        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {\n            var value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        };\n        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                return this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        };\n        ZoneDelegate.prototype._updateTaskCount = function (type, count) {\n            var counts = this._taskCounts;\n            var prev = counts[type];\n            var next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                var isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        };\n        return ZoneDelegate;\n    }());\n    var ZoneTask = (function () {\n        function ZoneTask(type, source, callback, options, scheduleFn, cancelFn) {\n            this._zone = null;\n            this.runCount = 0;\n            this._zoneDelegates = null;\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            this.callback = callback;\n            var self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        ZoneTask.invokeTask = function (task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        };\n        Object.defineProperty(ZoneTask.prototype, \"zone\", {\n            get: function () {\n                return this._zone;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ZoneTask.prototype, \"state\", {\n            get: function () {\n                return this._state;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ZoneTask.prototype.cancelScheduleRequest = function () {\n            this._transitionTo(notScheduled, scheduling);\n        };\n        ZoneTask.prototype._transitionTo = function (toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(this.type + \" '\" + this.source + \"': can not transition to '\" + toState + \"', expecting state '\" + fromState1 + \"'\" + (fromState2 ?\n                    ' or \\'' + fromState2 + '\\'' :\n                    '') + \", was '\" + this._state + \"'.\");\n            }\n        };\n        ZoneTask.prototype.toString = function () {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId;\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        };\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        ZoneTask.prototype.toJSON = function () {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        };\n        return ZoneTask;\n    }());\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var symbolSetTimeout = __symbol__('setTimeout');\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var _microTaskQueue = [];\n    var _isDrainingMicrotaskQueue = false;\n    var nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                nativeMicroTaskQueuePromise[symbolThen](drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                var queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (var i = 0; i < queue.length; i++) {\n                    var task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    var NO_ZONE = { name: 'NO ZONE' };\n    var notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    var microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    var patches = {};\n    var _api = {\n        symbol: __symbol__,\n        currentZoneFrame: function () { return _currentZoneFrame; },\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: function () { return !Zone[__symbol__('ignoreConsoleErrorUncaughtError')]; },\n        patchEventTarget: function () { return []; },\n        patchOnProperties: noop,\n        patchMethod: function () { return noop; },\n        bindArguments: function () { return null; },\n        setNativePromise: function (NativePromise) {\n            // sometimes NativePromise.resolve static function\n            // is not ready yet, (such as core-js/es6.promise)\n            // so we need to check here.\n            if (NativePromise && typeof NativePromise.resolve === FUNCTION) {\n                nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n            }\n        },\n    };\n    var _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    var _currentTask = null;\n    var _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    function __symbol__(name) {\n        return '__zone_symbol__' + name;\n    }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', function (global, Zone, api) {\n    var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    var ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            var className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    var __symbol__ = api.symbol;\n    var _uncaughtPromiseErrors = [];\n    var symbolPromise = __symbol__('Promise');\n    var symbolThen = __symbol__('then');\n    var creationTrace = '__creationTrace__';\n    api.onUnhandledError = function (e) {\n        if (api.showUncaughtError()) {\n            var rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = function () {\n        while (_uncaughtPromiseErrors.length) {\n            var _loop_1 = function () {\n                var uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(function () {\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            };\n            while (_uncaughtPromiseErrors.length) {\n                _loop_1();\n            }\n        }\n    };\n    var UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            var handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (handler && typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    var symbolState = __symbol__('state');\n    var symbolValue = __symbol__('value');\n    var source = 'Promise.then';\n    var UNRESOLVED = null;\n    var RESOLVED = true;\n    var REJECTED = false;\n    var REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return function (v) {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    var once = function () {\n        var wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    var TYPE_ERROR = 'Promise resolved with itself';\n    var CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        var onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            var then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(function () {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(function () {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                var queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    var trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (var i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    try {\n                        // try to print more readable error log\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        var error_1 = err;\n                        error_1.rejection = value;\n                        error_1.promise = promise;\n                        error_1.zone = Zone.current;\n                        error_1.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(error_1);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    var REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                var handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        var delegate = promise[symbolState] ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, function () {\n            try {\n                resolvePromise(chainPromise, true, zone.run(delegate, undefined, [promise[symbolValue]]));\n            }\n            catch (error) {\n                resolvePromise(chainPromise, false, error);\n            }\n        });\n    }\n    var ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    var ZoneAwarePromise = (function () {\n        function ZoneAwarePromise(executor) {\n            var promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        ZoneAwarePromise.toString = function () {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        };\n        ZoneAwarePromise.resolve = function (value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        };\n        ZoneAwarePromise.reject = function (error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        };\n        ZoneAwarePromise.race = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                promise && (promise = null || resolve(value));\n            }\n            function onReject(error) {\n                promise && (promise = null || reject(error));\n            }\n            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n                var value = values_1[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        };\n        ZoneAwarePromise.all = function (values) {\n            var resolve;\n            var reject;\n            var promise = new this(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n            var count = 0;\n            var resolvedValues = [];\n            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {\n                var value = values_2[_i];\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then((function (index) { return function (value) {\n                    resolvedValues[index] = value;\n                    count--;\n                    if (!count) {\n                        resolve(resolvedValues);\n                    }\n                }; })(count), reject);\n                count++;\n            }\n            if (!count)\n                resolve(resolvedValues);\n            return promise;\n        };\n        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {\n            var chainPromise = new this.constructor(null);\n            var zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        };\n        ZoneAwarePromise.prototype.catch = function (onRejected) {\n            return this.then(null, onRejected);\n        };\n        return ZoneAwarePromise;\n    }());\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    var NativePromise = global[symbolPromise] = global['Promise'];\n    var ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n    var desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n    if (!desc || desc.configurable) {\n        desc && delete desc.writable;\n        desc && delete desc.value;\n        if (!desc) {\n            desc = { configurable: true, enumerable: true };\n        }\n        desc.get = function () {\n            // if we already set ZoneAwarePromise, use patched one\n            // otherwise return native one.\n            return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n        };\n        desc.set = function (NewNativePromise) {\n            if (NewNativePromise === ZoneAwarePromise) {\n                // if the NewNativePromise is ZoneAwarePromise\n                // save to global\n                global[ZONE_AWARE_PROMISE] = NewNativePromise;\n            }\n            else {\n                // if the NewNativePromise is not ZoneAwarePromise\n                // for example: after load zone.js, some library just\n                // set es6-promise to global, if we set it to global\n                // directly, assertZonePatched will fail and angular\n                // will not loaded, so we just set the NewNativePromise\n                // to global[symbolPromise], so the result is just like\n                // we load ES6 Promise before zone.js\n                global[symbolPromise] = NewNativePromise;\n                if (!NewNativePromise.prototype[symbolThen]) {\n                    patchThen(NewNativePromise);\n                }\n                api.setNativePromise(NewNativePromise);\n            }\n        };\n        ObjectDefineProperty(global, 'Promise', desc);\n    }\n    global['Promise'] = ZoneAwarePromise;\n    var symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        var proto = Ctor.prototype;\n        var originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        // check Ctor.prototype.then propertyDescriptor is writable or not\n        // in meteor env, writable is false, we have to make it to be true.\n        var prop = ObjectGetOwnPropertyDescriptor(Ctor.prototype, 'then');\n        if (prop && prop.writable === false && prop.configurable) {\n            ObjectDefineProperty(Ctor.prototype, 'then', { writable: true });\n        }\n        Ctor.prototype.then = function (onResolve, onReject) {\n            var _this = this;\n            var wrapped = new ZoneAwarePromise(function (resolve, reject) {\n                originalThen.call(_this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    function zoneify(fn) {\n        return function () {\n            var resultPromise = fn.apply(this, arguments);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            var ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        var fetch_1 = global['fetch'];\n        if (typeof fetch_1 == 'function') {\n            global['fetch'] = zoneify(fetch_1);\n        }\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */ var ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nvar ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nvar ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nvar ObjectCreate = Object.create;\n/** Array.prototype.slice */\nvar ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nvar ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nvar REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nvar ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nvar ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nvar TRUE_STR = 'true';\n/** false string const */\nvar FALSE_STR = 'false';\n/** __zone_symbol__ string const */\nvar ZONE_SYMBOL_PREFIX = '__zone_symbol__';\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nvar zoneSymbol = Zone.__symbol__;\nvar isWindowExists = typeof window !== 'undefined';\nvar internalWindow = isWindowExists ? window : undefined;\nvar _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nvar REMOVE_ATTRIBUTE = 'removeAttribute';\nvar NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (var i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    var source = prototype.constructor['name'];\n    var _loop_1 = function (i) {\n        var name_1 = fnNames[i];\n        var delegate = prototype[name_1];\n        if (delegate) {\n            var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name_1);\n            if (!isPropertyWritable(prototypeDesc)) {\n                return \"continue\";\n            }\n            prototype[name_1] = (function (delegate) {\n                var patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    };\n    for (var i = 0; i < fnNames.length; i++) {\n        _loop_1(i);\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nvar isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nvar isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nvar isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nvar zoneSymbolEventNames = {};\nvar wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    var eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    var target = this || event.target || _global;\n    var listener = target[eventNameSymbol];\n    var result = listener && listener.apply(this, arguments);\n    if (result != undefined && !result) {\n        event.preventDefault();\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    var desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        var prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    var originalDescGet = desc.get;\n    var originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    var eventName = prop.substr(2);\n    var eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        var previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        var target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        var listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            var value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        var onProperties = [];\n        for (var prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (var j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nvar originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    var OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        var a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    var instance = new OriginalClass(function () { });\n    var prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    var proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    var delegateName = zoneSymbol(name);\n    var delegate;\n    if (proto && !(delegate = proto[delegateName])) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        var desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            var patchDelegate_1 = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate_1(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    var setNative = null;\n    function scheduleTask(task) {\n        var data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, function (delegate) { return function (self, args) {\n        var meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask, null);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    }; });\n}\n\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nvar isDetectedIEOrEdge = false;\nvar ieOrEdge = false;\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        var ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n        return ieOrEdge;\n    }\n    catch (error) {\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', function (global, Zone) {\n    // patch Func.prototype.toString to let them look like native\n    var originalFunctionToString = Zone['__zone_symbol__originalToString'] =\n        Function.prototype.toString;\n    var ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    var PROMISE_SYMBOL = zoneSymbol('Promise');\n    var ERROR_SYMBOL = zoneSymbol('Error');\n    Function.prototype.toString = function () {\n        if (typeof this === 'function') {\n            var originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.apply(this[ORIGINAL_DELEGATE_SYMBOL], arguments);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                var nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.apply(nativePromise, arguments);\n                }\n            }\n            if (this === Error) {\n                var nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.apply(nativeError, arguments);\n                }\n            }\n        }\n        return originalFunctionToString.apply(this, arguments);\n    };\n    // patch Object.prototype.toString to let them look like native\n    var originalObjectToString = Object.prototype.toString;\n    var PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.apply(this, arguments);\n    };\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// an identifier to tell ZoneTask do not create a new invoke closure\nvar OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nvar zoneSymbolEventNames$1 = {};\nvar globalSources = {};\nvar EVENT_NAME_SYMBOL_REGX = /^__zone_symbol__(\\w+)(true|false)$/;\nvar IMMEDIATE_PROPAGATION_SYMBOL = ('__zone_symbol__propagationStopped');\nfunction patchEventTarget(_global, apis, patchOptions) {\n    var ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    var REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    var LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    var REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    var zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    var ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    var PREPEND_EVENT_LISTENER = 'prependListener';\n    var PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    var invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        var delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = function (event) { return delegate.handleEvent(event); };\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        var options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            var delegate_1 = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate_1, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    var globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    var globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        var target = this || event.target || _global;\n        var tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                var copyTasks = tasks.slice();\n                for (var i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        var useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        var validateHandler = patchOptions && patchOptions.vh;\n        var checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        var returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        var proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        var taskData = {};\n        var nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        var nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        var nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        var nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        var nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        var customScheduleGlobal = function () {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        var customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                var symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                var symbolEventName = void 0;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (var i = 0; i < existingTasks.length; i++) {\n                        var existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        var customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        var customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        var customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        var customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        var compareTaskCallbackVsDelegate = function (task, delegate) {\n            var typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        var compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        var blackListedEvents = Zone[Zone.__symbol__('BLACK_LISTED_EVENTS')];\n        var makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget, prepend) {\n            if (returnTarget === void 0) { returnTarget = false; }\n            if (prepend === void 0) { prepend = false; }\n            return function () {\n                var target = this || _global;\n                var delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                var isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                var eventName = arguments[0];\n                var options = arguments[2];\n                if (blackListedEvents) {\n                    // check black list\n                    for (var i = 0; i < blackListedEvents.length; i++) {\n                        if (eventName === blackListedEvents[i]) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                    }\n                }\n                var capture;\n                var once = false;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                    once = options ? !!options.once : false;\n                }\n                var zone = Zone.current;\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                var symbolEventName;\n                if (!symbolEventNames) {\n                    // the code is duplicate, but I just want to get some better performance\n                    var falseEventName = eventName + FALSE_STR;\n                    var trueEventName = eventName + TRUE_STR;\n                    var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                    var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                    zoneSymbolEventNames$1[eventName] = {};\n                    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                    symbolEventName = capture ? symbolCapture : symbol;\n                }\n                else {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                var existingTasks = target[symbolEventName];\n                var isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (var i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                var source;\n                var constructorName = target.constructor['name'];\n                var targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource + eventName;\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                var data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : null;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                var task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                task.options = options;\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var options = arguments[2];\n            var capture;\n            if (options === undefined) {\n                capture = false;\n            }\n            else if (options === true) {\n                capture = true;\n            }\n            else if (options === false) {\n                capture = false;\n            }\n            else {\n                capture = options ? !!options.capture : false;\n            }\n            var delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            var symbolEventNames = zoneSymbolEventNames$1[eventName];\n            var symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            var existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (var i = 0; i < existingTasks.length; i++) {\n                    var existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            var listeners = [];\n            var tasks = findEventTasks(target, eventName);\n            for (var i = 0; i < tasks.length; i++) {\n                var task = tasks[i];\n                var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            var target = this || _global;\n            var eventName = arguments[0];\n            if (!eventName) {\n                var keys = Object.keys(target);\n                for (var i = 0; i < keys.length; i++) {\n                    var prop = keys[i];\n                    var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    var evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                var symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    var symbolEventName = symbolEventNames[FALSE_STR];\n                    var symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    var tasks = target[symbolEventName];\n                    var captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        var removeTasks = tasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        var removeTasks = captureTasks.slice();\n                        for (var i = 0; i < removeTasks.length; i++) {\n                            var task = removeTasks[i];\n                            var delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    var results = [];\n    for (var i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    var foundTasks = [];\n    for (var prop in target) {\n        var match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        var evtName = match && match[1];\n        if (evtName && (!eventName || evtName === eventName)) {\n            var tasks = target[prop];\n            if (tasks) {\n                for (var i = 0; i < tasks.length; i++) {\n                    foundTasks.push(tasks[i]);\n                }\n            }\n        }\n    }\n    return foundTasks;\n}\nfunction patchEventPrototype(global, api) {\n    var Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', function (delegate) { return function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        }; });\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nvar taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    var setNative = null;\n    var clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    var tasksByHandleId = {};\n    function scheduleTask(task) {\n        var data = task.data;\n        function timer() {\n            try {\n                task.invoke.apply(this, arguments);\n            }\n            finally {\n                // issue-934, task will be cancelled\n                // even it is a periodic task such as\n                // setInterval\n                if (!(task.data && task.data.isPeriodic)) {\n                    if (typeof data.handleId === 'number') {\n                        // in non-nodejs env, we remove timerId\n                        // from local cache\n                        delete tasksByHandleId[data.handleId];\n                    }\n                    else if (data.handleId) {\n                        // Node returns complex objects as handleIds\n                        // we remove task reference from timer object\n                        data.handleId[taskSymbol] = null;\n                    }\n                }\n            }\n        }\n        data.args[0] = timer;\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative(task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, function (delegate) { return function (self, args) {\n            if (typeof args[0] === 'function') {\n                var options = {\n                    handleId: null,\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,\n                    args: args\n                };\n                var task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                var handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        }; });\n    clearNative =\n        patchMethod(window, cancelName, function (delegate) { return function (self, args) {\n            var id = args[0];\n            var task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        }; });\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/*\n * This is necessary for Chrome and Chrome mobile, to enable\n * things like redefining `createdCallback` on an element.\n */\nvar _defineProperty = Object[zoneSymbol('defineProperty')] = Object.defineProperty;\nvar _getOwnPropertyDescriptor = Object[zoneSymbol('getOwnPropertyDescriptor')] =\n    Object.getOwnPropertyDescriptor;\nvar _create = Object.create;\nvar unconfigurablesKey = zoneSymbol('unconfigurables');\nfunction propertyPatch() {\n    Object.defineProperty = function (obj, prop, desc) {\n        if (isUnconfigurable(obj, prop)) {\n            throw new TypeError('Cannot assign to read only property \\'' + prop + '\\' of ' + obj);\n        }\n        var originalConfigurableFlag = desc.configurable;\n        if (prop !== 'prototype') {\n            desc = rewriteDescriptor(obj, prop, desc);\n        }\n        return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n    };\n    Object.defineProperties = function (obj, props) {\n        Object.keys(props).forEach(function (prop) {\n            Object.defineProperty(obj, prop, props[prop]);\n        });\n        return obj;\n    };\n    Object.create = function (obj, proto) {\n        if (typeof proto === 'object' && !Object.isFrozen(proto)) {\n            Object.keys(proto).forEach(function (prop) {\n                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);\n            });\n        }\n        return _create(obj, proto);\n    };\n    Object.getOwnPropertyDescriptor = function (obj, prop) {\n        var desc = _getOwnPropertyDescriptor(obj, prop);\n        if (isUnconfigurable(obj, prop)) {\n            desc.configurable = false;\n        }\n        return desc;\n    };\n}\nfunction _redefineProperty(obj, prop, desc) {\n    var originalConfigurableFlag = desc.configurable;\n    desc = rewriteDescriptor(obj, prop, desc);\n    return _tryDefineProperty(obj, prop, desc, originalConfigurableFlag);\n}\nfunction isUnconfigurable(obj, prop) {\n    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];\n}\nfunction rewriteDescriptor(obj, prop, desc) {\n    // issue-927, if the desc is frozen, don't try to change the desc\n    if (!Object.isFrozen(desc)) {\n        desc.configurable = true;\n    }\n    if (!desc.configurable) {\n        // issue-927, if the obj is frozen, don't try to set the desc to obj\n        if (!obj[unconfigurablesKey] && !Object.isFrozen(obj)) {\n            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });\n        }\n        if (obj[unconfigurablesKey]) {\n            obj[unconfigurablesKey][prop] = true;\n        }\n    }\n    return desc;\n}\nfunction _tryDefineProperty(obj, prop, desc, originalConfigurableFlag) {\n    try {\n        return _defineProperty(obj, prop, desc);\n    }\n    catch (error) {\n        if (desc.configurable) {\n            // In case of errors, when the configurable flag was likely set by rewriteDescriptor(), let's\n            // retry with the original flag value\n            if (typeof originalConfigurableFlag == 'undefined') {\n                delete desc.configurable;\n            }\n            else {\n                desc.configurable = originalConfigurableFlag;\n            }\n            try {\n                return _defineProperty(obj, prop, desc);\n            }\n            catch (error) {\n                var descJson = null;\n                try {\n                    descJson = JSON.stringify(desc);\n                }\n                catch (error) {\n                    descJson = desc.toString();\n                }\n                console.log(\"Attempting to configure '\" + prop + \"' with descriptor '\" + descJson + \"' on object '\" + obj + \"' and got error, giving up: \" + error);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// we have to patch the instance since the proto is non-configurable\nfunction apply(api, _global) {\n    var WS = _global.WebSocket;\n    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener\n    // On older Chrome, no need since EventTarget was already patched\n    if (!_global.EventTarget) {\n        patchEventTarget(_global, [WS.prototype]);\n    }\n    _global.WebSocket = function (x, y) {\n        var socket = arguments.length > 1 ? new WS(x, y) : new WS(x);\n        var proxySocket;\n        var proxySocketProto;\n        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance\n        var onmessageDesc = ObjectGetOwnPropertyDescriptor(socket, 'onmessage');\n        if (onmessageDesc && onmessageDesc.configurable === false) {\n            proxySocket = ObjectCreate(socket);\n            // socket have own property descriptor 'onopen', 'onmessage', 'onclose', 'onerror'\n            // but proxySocket not, so we will keep socket as prototype and pass it to\n            // patchOnProperties method\n            proxySocketProto = socket;\n            [ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR, 'send', 'close'].forEach(function (propName) {\n                proxySocket[propName] = function () {\n                    var args = ArraySlice.call(arguments);\n                    if (propName === ADD_EVENT_LISTENER_STR || propName === REMOVE_EVENT_LISTENER_STR) {\n                        var eventName = args.length > 0 ? args[0] : undefined;\n                        if (eventName) {\n                            var propertySymbol = Zone.__symbol__('ON_PROPERTY' + eventName);\n                            socket[propertySymbol] = proxySocket[propertySymbol];\n                        }\n                    }\n                    return socket[propName].apply(socket, args);\n                };\n            });\n        }\n        else {\n            // we can patch the real socket\n            proxySocket = socket;\n        }\n        patchOnProperties(proxySocket, ['close', 'error', 'message', 'open'], proxySocketProto);\n        return proxySocket;\n    };\n    var globalWebSocket = _global['WebSocket'];\n    for (var prop in WS) {\n        globalWebSocket[prop] = WS[prop];\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nvar globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nvar documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange'\n];\nvar windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplyconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nvar htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nvar mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nvar ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nvar webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nvar formEventNames = ['autocomplete', 'autocompleteerror'];\nvar detailEventNames = ['toggle'];\nvar frameEventNames = ['load'];\nvar frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nvar marqueeEventNames = ['bounce', 'finish', 'start'];\nvar XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nvar IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nvar websocketEventNames = ['close', 'error', 'open', 'message'];\nvar workerEventNames = ['error', 'message'];\nvar eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties) {\n        return onProperties;\n    }\n    var tip = ignoreProperties.filter(function (ip) { return ip.target === target; });\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    var targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(function (op) { return targetIgnoreProperties.indexOf(op) === -1; });\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    var filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    var supportsWebSocket = typeof WebSocket !== 'undefined';\n    if (canPatchViaPropertyDescriptor()) {\n        var ignoreProperties = _global.__Zone_ignore_on_properties;\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            var internalWindow = window;\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            var HTMLMarqueeElement_1 = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement_1) {\n                patchFilteredProperties(HTMLMarqueeElement_1.prototype, marqueeEventNames, ignoreProperties);\n            }\n            var Worker_1 = internalWindow['Worker'];\n            if (Worker_1) {\n                patchFilteredProperties(Worker_1.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        var XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n    else {\n        // Safari, Android browsers (Jelly Bean)\n        patchViaCapturingAllTheEvents();\n        patchClass('XMLHttpRequest');\n        if (supportsWebSocket) {\n            apply(api, _global);\n        }\n    }\n}\nfunction canPatchViaPropertyDescriptor() {\n    if ((isBrowser || isMix) && !ObjectGetOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') &&\n        typeof Element !== 'undefined') {\n        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364\n        // IDL interface attributes are not configurable\n        var desc = ObjectGetOwnPropertyDescriptor(Element.prototype, 'onclick');\n        if (desc && !desc.configurable)\n            return false;\n    }\n    var ON_READY_STATE_CHANGE = 'onreadystatechange';\n    var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n    var xhrDesc = ObjectGetOwnPropertyDescriptor(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE);\n    // add enumerable and configurable here because in opera\n    // by default XMLHttpRequest.prototype.onreadystatechange is undefined\n    // without adding enumerable and configurable will cause onreadystatechange\n    // non-configurable\n    // and if XMLHttpRequest.prototype.onreadystatechange is undefined,\n    // we should set a real desc instead a fake one\n    if (xhrDesc) {\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return true;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var result = !!req.onreadystatechange;\n        // restore original desc\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, xhrDesc || {});\n        return result;\n    }\n    else {\n        var SYMBOL_FAKE_ONREADYSTATECHANGE_1 = zoneSymbol('fake');\n        ObjectDefineProperty(XMLHttpRequestPrototype, ON_READY_STATE_CHANGE, {\n            enumerable: true,\n            configurable: true,\n            get: function () {\n                return this[SYMBOL_FAKE_ONREADYSTATECHANGE_1];\n            },\n            set: function (value) {\n                this[SYMBOL_FAKE_ONREADYSTATECHANGE_1] = value;\n            }\n        });\n        var req = new XMLHttpRequest();\n        var detectFunc = function () { };\n        req.onreadystatechange = detectFunc;\n        var result = req[SYMBOL_FAKE_ONREADYSTATECHANGE_1] === detectFunc;\n        req.onreadystatechange = null;\n        return result;\n    }\n}\nvar unboundKey = zoneSymbol('unbound');\n// Whenever any eventListener fires, we check the eventListener target and all parents\n// for `onwhatever` properties and replace them with zone-bound functions\n// - Chrome (for now)\nfunction patchViaCapturingAllTheEvents() {\n    var _loop_1 = function (i) {\n        var property = eventNames[i];\n        var onproperty = 'on' + property;\n        self.addEventListener(property, function (event) {\n            var elt = event.target, bound, source;\n            if (elt) {\n                source = elt.constructor['name'] + '.' + onproperty;\n            }\n            else {\n                source = 'unknown.' + onproperty;\n            }\n            while (elt) {\n                if (elt[onproperty] && !elt[onproperty][unboundKey]) {\n                    bound = wrapWithCurrentZone(elt[onproperty], source);\n                    bound[unboundKey] = elt[onproperty];\n                    elt[onproperty] = bound;\n                }\n                elt = elt.parentElement;\n            }\n        }, true);\n    };\n    for (var i = 0; i < eventNames.length; i++) {\n        _loop_1(i);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';\n    var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Window,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex,WebSocket'\n        .split(',');\n    var EVENT_TARGET = 'EventTarget';\n    var apis = [];\n    var isWtf = _global['wtf'];\n    var WTF_ISSUE_555_ARRAY = WTF_ISSUE_555.split(',');\n    if (isWtf) {\n        // Workaround for: https://github.com/google/tracing-framework/issues/555\n        apis = WTF_ISSUE_555_ARRAY.map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);\n    }\n    else if (_global[EVENT_TARGET]) {\n        apis.push(EVENT_TARGET);\n    }\n    else {\n        // Note: EventTarget is not available in all browsers,\n        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget\n        apis = NO_EVENT_TARGET;\n    }\n    var isDisableIECheck = _global['__Zone_disable_IE_check'] || false;\n    var isEnableCrossContextCheck = _global['__Zone_enable_cross_context_check'] || false;\n    var ieOrEdge = isIEOrEdge();\n    var ADD_EVENT_LISTENER_SOURCE = '.addEventListener:';\n    var FUNCTION_WRAPPER = '[object FunctionWrapper]';\n    var BROWSER_TOOLS = 'function __BROWSERTOOLS_CONSOLE_SAFEFUNC() { [native code] }';\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (var i = 0; i < eventNames.length; i++) {\n        var eventName = eventNames[i];\n        var falseEventName = eventName + FALSE_STR;\n        var trueEventName = eventName + TRUE_STR;\n        var symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        var symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    //  predefine all task.source string\n    for (var i = 0; i < WTF_ISSUE_555.length; i++) {\n        var target = WTF_ISSUE_555_ARRAY[i];\n        var targets = globalSources[target] = {};\n        for (var j = 0; j < eventNames.length; j++) {\n            var eventName = eventNames[j];\n            targets[eventName] = target + ADD_EVENT_LISTENER_SOURCE + eventName;\n        }\n    }\n    var checkIEAndCrossContext = function (nativeDelegate, delegate, target, args) {\n        if (!isDisableIECheck && ieOrEdge) {\n            if (isEnableCrossContextCheck) {\n                try {\n                    var testString = delegate.toString();\n                    if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                        nativeDelegate.apply(target, args);\n                        return false;\n                    }\n                }\n                catch (error) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n            else {\n                var testString = delegate.toString();\n                if ((testString === FUNCTION_WRAPPER || testString == BROWSER_TOOLS)) {\n                    nativeDelegate.apply(target, args);\n                    return false;\n                }\n            }\n        }\n        else if (isEnableCrossContextCheck) {\n            try {\n                delegate.toString();\n            }\n            catch (error) {\n                nativeDelegate.apply(target, args);\n                return false;\n            }\n        }\n        return true;\n    };\n    var apiTypes = [];\n    for (var i = 0; i < apis.length; i++) {\n        var type = _global[apis[i]];\n        apiTypes.push(type && type.prototype);\n    }\n    // vh is validateHandler to check event handler\n    // is valid or not(for security check)\n    patchEventTarget(_global, apiTypes, { vh: checkIEAndCrossContext });\n    api.patchEventTarget = patchEventTarget;\n    return true;\n}\nfunction patchEvent(global, api) {\n    patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction registerElementPatch(_global) {\n    if ((!isBrowser && !isMix) || !('registerElement' in _global.document)) {\n        return;\n    }\n    var _registerElement = document.registerElement;\n    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];\n    document.registerElement = function (name, opts) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                var source = 'Document.registerElement::' + callback;\n                var prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    var descriptor = ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = wrapWithCurrentZone(descriptor.value, source);\n                        _redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else {\n                        prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return _registerElement.call(document, name, opts);\n    };\n    attachOriginToPatched(document.registerElement, _registerElement);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('util', function (global, Zone, api) {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n});\nZone.__load_patch('timers', function (global) {\n    var set = 'set';\n    var clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', function (global) {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', function (global, Zone) {\n    var blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (var i = 0; i < blockingMethods.length; i++) {\n        var name_1 = blockingMethods[i];\n        patchMethod(global, name_1, function (delegate, symbol, name) {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', function (global, Zone, api) {\n    // load blackListEvents from global\n    var SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    var XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', function (global, Zone, api) {\n    propertyDescriptorPatch(api, global);\n    propertyPatch();\n    registerElementPatch(global);\n});\nZone.__load_patch('canvas', function (global) {\n    var HTMLCanvasElement = global['HTMLCanvasElement'];\n    if (typeof HTMLCanvasElement !== 'undefined' && HTMLCanvasElement.prototype &&\n        HTMLCanvasElement.prototype.toBlob) {\n        patchMacroTask(HTMLCanvasElement.prototype, 'toBlob', function (self, args) {\n            return { name: 'HTMLCanvasElement.toBlob', target: self, cbIdx: 0, args: args };\n        });\n    }\n});\nZone.__load_patch('XHR', function (global, Zone) {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    var XHR_TASK = zoneSymbol('xhrTask');\n    var XHR_SYNC = zoneSymbol('xhrSync');\n    var XHR_LISTENER = zoneSymbol('xhrListener');\n    var XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    var XHR_URL = zoneSymbol('xhrURL');\n    function patchXHR(window) {\n        var XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        var oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        var oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            var XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                var XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        var READY_STATE_CHANGE = 'readystatechange';\n        var SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            XMLHttpRequest[XHR_SCHEDULED] = false;\n            var data = task.data;\n            var target = data.target;\n            // remove existing event listener\n            var listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            var newListener = target[XHR_LISTENER] = function () {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && XMLHttpRequest[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        task.invoke();\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            var storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            XMLHttpRequest[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            var data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        var openNative = patchMethod(XMLHttpRequestPrototype, 'open', function () { return function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        }; });\n        var XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        var sendNative = patchMethod(XMLHttpRequestPrototype, 'send', function () { return function (self, args) {\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                var options = {\n                    target: self,\n                    url: self[XHR_URL],\n                    isPeriodic: false,\n                    delay: null,\n                    args: args,\n                    aborted: false\n                };\n                return scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n            }\n        }; });\n        var abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', function () { return function (self) {\n            var task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        }; });\n    }\n});\nZone.__load_patch('geolocation', function (global) {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', function (global, Zone) {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            var eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(function (eventTask) {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                var PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    var evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zone.js/dist/zone.js\n// module id = 260\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = singleSpaAngular2;\nvar defaultOpts = {\n\t// required opts\n\tdomElementGetter: null,\n\tangularPlatform: null,\n\tmainModule: null,\n\ttemplate: null,\n\t// optional opts\n\tRouter: null\n};\n\nfunction singleSpaAngular2(userOpts) {\n\tif ((typeof userOpts === 'undefined' ? 'undefined' : _typeof(userOpts)) !== 'object') {\n\t\tthrow new Error('single-spa-angular2 requires a configuration object');\n\t}\n\n\tvar opts = _extends({}, defaultOpts, userOpts);\n\n\tif (typeof opts.domElementGetter !== 'function') {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.domElementGetter function');\n\t}\n\n\tif (!opts.angularPlatform) {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.angularPlatform. Usually this should be the return value of platformBrowserDynamic()');\n\t}\n\n\tif (!opts.mainModule) {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.mainModule, which is the Angular module to bootstrap');\n\t}\n\n\tif (typeof opts.template !== 'string') {\n\t\tthrow new Error('single-spa-angular2 must be passed opts.template string');\n\t}\n\n\treturn {\n\t\tbootstrap: bootstrap.bind(null, opts),\n\t\tmount: mount.bind(null, opts),\n\t\tunmount: unmount.bind(null, opts)\n\t};\n}\n\nfunction bootstrap(opts) {\n\treturn Promise.resolve();\n}\n\nfunction mount(opts) {\n\tvar containerEl = getContainerEl(opts);\n\tcontainerEl.innerHTML = opts.template;\n\treturn opts.angularPlatform.bootstrapModule(opts.mainModule).then(function (module) {\n\t\treturn opts.bootstrappedModule = module;\n\t});\n}\n\nfunction unmount(opts) {\n\treturn new Promise(function (resolve, reject) {\n\t\tif (opts.Router) {\n\t\t\tvar routerRef = opts.bootstrappedModule.injector.get(opts.Router);\n\t\t\trouterRef.dispose();\n\t\t}\n\t\topts.bootstrappedModule.destroy();\n\t\tdelete opts.bootstrappedModule;\n\t\tresolve();\n\t});\n}\n\nfunction getContainerEl(opts) {\n\tvar element = opts.domElementGetter();\n\tif (!element) {\n\t\tthrow new Error('domElementGetter did not return a valid dom element');\n\t}\n\n\treturn element;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/single-spa-angular2/lib/single-spa-angular2.js\n// module id = 261\n// module chunks = 0","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {App2} from './app2.component.ts';\nimport {Subroute1} from './subroute1.component.ts';\nimport {Subroute2} from './subroute2.component.ts';\nimport {enableProdMode} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {APP_BASE_HREF} from \"@angular/common\";\n\nconst appRoutes: Routes = [\n  {\n    path: 'subroute1',\n    component: Subroute1\n  },\n  {\n    path: 'subroute2',\n    component: Subroute2\n  },\n];\n\nenableProdMode();\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes, {}),\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue: '/app2/'}],\n  declarations: [\n    App2,\n    Subroute1,\n    Subroute2,\n  ],\n  bootstrap: [App2]\n})\nexport default class MainModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app2/main-module.ts","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app2',\n  template: `\n    <div style=\"margin-top: 100px;\">\n      This was rendered by App2 which is written in Angular\n    </div>\n    <a [routerLink]=\"['/subroute1']\" routerLinkActive=\"active\">Angular route 1</a>\n    <a [routerLink]=\"['/subroute2']\" routerLinkActive=\"active\">Angular route 2</a>\n\n    <router-outlet></router-outlet>\n  `,\n})\nexport class App2 {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app2/app2.component.ts","import {Component} from '@angular/core';\n\n@Component({\n  template: `\n    <div>\n      Subroute 1 is working!\n    </div>\n  `,\n})\nexport class Subroute1 {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app2/subroute1.component.ts","import {Component} from '@angular/core';\n\n@Component({\n  template: `\n    <div>\n      Subroute 2 is working!\n    </div>\n  `,\n})\nexport class Subroute2 {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app2/subroute2.component.ts"],"sourceRoot":""}